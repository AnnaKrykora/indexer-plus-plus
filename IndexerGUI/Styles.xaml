<!--
    This file is the part of Indexer++ project
   
    Copyright (C) 2016 Anna Krykora <krykoraanna@gmail.com>. All rights reserved.

    Use of this source code is governed by a MIT-style license that can be found in the LICENSE file.
-->
    
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:indexer="clr-namespace:Indexer">

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="MinWidth" Value="30" />
    </Style>

    <BitmapScalingMode x:Key="BitmapScalingMode">HighQuality</BitmapScalingMode>

    <DataTemplate x:Key="HeaderTemplateArrowUp">
        <DockPanel Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}" LastChildFill="True">
            <Path x:Name="arrowUp"
                  Width="20"
                  Margin="5,0,5,0"
                  HorizontalAlignment="Right"
                  Data="M 5,10 L 15,10 L 10,5 L 5,10"
                  DockPanel.Dock="Right"
                  Fill="#CCCCCC"
                  SnapsToDevicePixels="True"
                  StrokeThickness="1" />
            <TextBlock Text="{Binding }" />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="HeaderTemplateArrowDown">
        <DockPanel Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}" LastChildFill="True">
            <Path x:Name="arrowDown"
                  Width="20"
                  Margin="5,0,5,0"
                  HorizontalAlignment="Right"
                  Data="M 5,5 L 10,10 L 15,5 L 5,5"
                  DockPanel.Dock="Right"
                  Fill="#CCCCCC"
                  SnapsToDevicePixels="True"
                  StrokeThickness="1" />
            <TextBlock Text="{Binding }" />
        </DockPanel>
    </DataTemplate>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="23" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="validationTemplate" TargetType="Control">
        <Grid>
            <TextBlock Margin="0 0 3 0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       FontSize="18"
                       Foreground="Red"
                       Text="!"
                       ToolTip="{Binding ElementName=adornedElement,
                       Path=AdornedElement.(Validation.Errors),
                       Converter={indexer:ValidationErrorsToStringConverter}}" />
            <Border Margin="-1"
                    BorderBrush="Red"
                    BorderThickness="0.5">
                <AdornedElementPlaceholder Name="adornedElement" VerticalAlignment="Center" />
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="UpArrowButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            Width="22"
                            Height="22"
                            Background="White"
                            BorderThickness="1"
                            CornerRadius="20"
                            Padding="0 2 0 0">
                        <Path x:Name="arrowUp"
                              Width="20"
                              Data="M 5,10 L 15,10 L 10,5 L 5,10"
                              Fill="{Binding Foreground,
                              RelativeSource={RelativeSource Mode=FindAncestor,
                              AncestorType=Button}}"
                              SnapsToDevicePixels="True"
                              StrokeThickness="1" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="#ABABAB" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#ABABAB" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="#CCCCCCCC" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#CCCCCCCC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>